# GH actions.
name: LLM-Conda-Nightly

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 5 * * *' # 5 AM UTC


jobs:
  Build:
    strategy:
      matrix:
        pkg: ['mlc-chat-nightly']
        sys:
          - os: ubuntu-latest
            conda_pkg_path: linux-64
            shell: 'bash -l {0}'
          - os: windows-latest
            shell: 'cmd /C call {0}'
            conda_pkg_path: win-64
          - os: macos-latest
            conda_pkg_path: osx-64
            shell: 'bash -l {0}'

    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Checkout
      run: |
        rm -rf tvm mlc-llm
        git clone https://github.com/mlc-ai/relax tvm --recursive
        git clone https://github.com/mlc-ai/mlc-llm mlc-llm --recursive
    - name: Sync Package Versions
      run: |
        python3 scripts/sync_package.py --package mlc-llm --package-name ${{ matrix.pkg }}
    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
    - uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda/mlc-llm/build-environment.yaml') }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: mlc-llm-build
        channels: conda-forge
        channel-priority: flexible
        python-version: 3.11
        show-channel-urls: true
        environment-file: conda/mlc-llm/build-environment.yaml
        auto-activate-base: false
    - name: Conda info
      run: |
        conda info
        conda list
        python --version
    - name: Build Conda
      env:
        TVM_HOME: ${{ github.workspace }}/tvm
        MACOSX_DEPLOYMENT_TARGET: 11.0
      run: |
        conda build -c conda-forge --output-folder=conda/pkg -m conda/mlc-llm/build_config.yaml conda/mlc-llm/recipe
    - name: Conda-Deploy
      if: github.ref == 'refs/heads/main'
      env:
        ANACONDA_API_TOKEN: ${{ secrets.MLC_ANACONDA_TOKEN }}
      run: >-
        anaconda upload --force --label main conda/pkg/${{ matrix.sys.conda_pkg_path }}/*.tar.bz2
